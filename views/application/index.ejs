<main id="application">

	<article class="info-container" v-class="disable-pointer-events:!displayNodeData && !displayNodeCreate">
		<nav class="enable-pointer-events">
	 		<button class="btn btn-default node-create"
	 						v-class="hidden:displayNodeCreate || displayNodeData" 
	 						v-on="click:displayNodeCreate=true">
	 	  	<span class="glyphicon glyphicon-plus"></span>
	 		</button>
		</nav>
		<section class="info-overlay"></section>
		<aside class="info-panel default-pointer-events" v-component="x-node-create" v-if="displayNodeCreate" >	 		
 			<div v-if="data">
	 			<ul class="list-unstyled">
	 				<li v-repeat="data"><b>{{$key}}</b>:{{$value}}</li>
	 			</ul>
 			</div>
			<form class="form-inline">
				<div class="form-group" v-class="has-error:keyHasError">
					<input class="form-control" placeholder="Key" type="text" v-model="key">
				</div>
				<div class="form-group" v-class="has-error:valueHasError">
					<input class="form-control" placeholder="Value" type="text" v-model="value">
				</div>
				<button class="btn btn-default" type="button" v-on="click:addPropertyHandler">Add</button>
			</form>
			<button class="btn btn-default" v-class="disabled:!data" v-on="click:createNodeHandler">Create</button>
		</aside>
		<aside class="info-panel" v-component="x-node-data" v-if="displayNodeData">
			<ul class="list-unstyled">
				<li v-repeat="nodeDataList">
					<span v-if="typeof(value)!='object' && key.charAt(0)!='_'"><b>{{key}}</b>:{{value}}</span>
					<span v-if="typeof(value)=='object' && key.charAt(0)!='_'">
						<b>{{key}}</b>:
						<ul>
							<li v-repeat="value"><b>{{$key}}</b>:{{$value}}</li>
						</ul>
					</span>
				</li>
			</ul>
			<div v-if="addProperty">
				<form class="form-inline">
					<div class="form-group" v-class="has-error:keyHasError">
						<input class="form-control" placeholder="Key" type="text" v-model="key">
					</div>
					<div class="form-group" v-class="has-error:valueHasError">
						<input class="form-control" placeholder="Value" type="text" v-model="value">
					</div>
					<button class="btn btn-default" type="button" v-on="click:savePropertyHandler()">Save</button>
				</form>
			</div>
			<button class="btn btn-default" v-class="hidden:addProperty" v-on="click:addProperty=true">Add</button>
			<button class="btn btn-default" v-class="hidden:!addProperty" v-on="click:addProperty=false">Cancel</button>
		</aside>
	</article>

	<article class="graph-container">
		<svg class="disable-user-selection" v-attr="viewBox:viewBox"
																				v-component="x-graph"
																				v-xon="x-dragstart:panStart, x-drag:pan">
			<g class="link"
				 v-xon="x-mouseover:freezePosition, x-mouseout:releasePosition, x-dragstart:dragstart, x-drag:drag"
				 v-component="x-link"
				 v-repeat="links">
				<line v-attr="x1:source.x, y1:source.y, x2:target.x, y2:target.y"></line>
			</g>
			<g class="node"
				 v-attr="transform:'translate('+x+','+y+')'"
				 v-component="x-node"
				 v-repeat="nodes">
				<g v-xon="x-mouseover:mouseover, x-mouseout:mouseout">
					<x-radial-menu v-if="menu">
						<x-radial-button v-on="click:setLinkSource">link</x-radial-button>
						<x-radial-button v-on="click:deleteNode( $event, id )">delete</x-radial-button>
					</x-radial-menu>
					<circle class="node-circle"
									v-attr="r:radius"
									v-xon="x-click:click, x-dragstart:dragstart, x-drag:drag, x-dragend:dragend">
			 		</circle>
				</g>
				<text class="node-label"
							text-anchor="middle"
							v-attr="transform:'translate('+labelX+','+labelY+')'"
							v-class="invisible:menu">
					Label {{$index}}
				</text>
			</g>
			<x-radial-menu v-attr="transform:'translate('+cmX+','+cmY+')'" v-if="displayContextMenu">
				<x-radial-button>create node</x-radial-button>
				<x-radial-button>calculate force</x-radial-button>
			</x-radial-menu>
		</svg>
	</article>

</main>

<script id="template-radial-button" type="text/x-template">
	<g class="node-menu">
		<path v-attr="d:backgroundPath"></path>
		<path class="node-menu-highlight" v-attr="d:highlightPath"></path>
		<path id="{{textPathId}}" opacity="0" fill="none" v-attr="d:textPath"></path>
		<text class="node-menu-item-label" text-anchor="middle" v-attr="x:x, dy:dy">
			<textPath xlink:href="#{{textPathId}}">
				<content></content>
			</textPath>
		</text>
	</g>
</script>

<script id="template-radial-menu" type="text/x-template">
	<g>
		<circle fill-opacity="0" r="80"></circle>
		<g class="content">
			<content></content>
		</g>
	</g>
</script>
